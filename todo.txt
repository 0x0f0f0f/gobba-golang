(A) AST tests 
(A) Formalize/Implement union and product types 
(A) DK16 type system with GADTS
(B) Parse lists and vectors
(B) EBNF
DEFINE HOW YOU WANT TO HANDLE CONCURRENCY!
Interpretation over execution
Formalize operational semantics
Formalize linear algebra in type system
Effect system: allow/deny effects
OPTIONAL??? Policy (automata) based effect system based on the algebra of communicating processes. Paper degano giangi 
x DK13 type system
x Parse function application tests
x lex/parse/typecheck explicit type annotations
x Basic type inference
x (A) Parse ifthenelse test
x (A) uniquify/alpha convert AST
x DEFINE HOW YOU WANT TO HANDLE POLYMORPHISM
x formalize type system numerical tower 
x implement type system numerical tower 
x (A) Parse function arguments tests
x implement Type system
x decent error handling for parser
x (A) Parse function literals
x Lex floats (https://github.com/abs-lang/abs/blob/master/lexer/lexer.go) 
x Lex complex numbers (4.1232 + 3i) !!
x Parse if statements
x DEFINE HOW YOU WANT TO HANDLE CLASS TYPING/ALGEBRAIC DATA TYPES: choose between structs/interfaces/typecasting or structs and sum ADTs
x Parse type annotations
